
Showing logs for build [32mhgautam-my-golang-pr-9-pr-build-c2ksd-1[0m stage [32mfrom-build-pack[0m and container [32mstep-credential-initializer-4rhzc[0m
{"level":"info","ts":1592423375.2627609,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/refs/heads/0.8.0-ns-support: no such file or directory"}
{"level":"info","ts":1592423375.2633946,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}

Showing logs for build [32mhgautam-my-golang-pr-9-pr-build-c2ksd-1[0m stage [32mfrom-build-pack[0m and container [32mstep-working-dir-initializer-vslqp[0m
{"level":"info","ts":1592423376.2537708,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/HEAD: no such file or directory"}
{"level":"info","ts":1592423376.2551913,"logger":"fallback-logger","caller":"bash/main.go:64","msg":"Successfully executed command \"sh -c mkdir -p /workspace/source\"; output "}

Showing logs for build [32mhgautam-my-golang-pr-9-pr-build-c2ksd-1[0m stage [32mfrom-build-pack[0m and container [32mstep-place-tools[0m

Showing logs for build [32mhgautam-my-golang-pr-9-pr-build-c2ksd-1[0m stage [32mfrom-build-pack[0m and container [32mstep-git-source-hgautam-my-golang-pr-9-pr-build-c2ksd-n85rj[0m
{"level":"info","ts":1592423382.311379,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/refs/heads/0.8.0-ns-support: no such file or directory"}
{"level":"info","ts":1592423382.9917612,"logger":"fallback-logger","caller":"git/git.go:103","msg":"Successfully cloned https://github.com/*******/my-golang.git @ master in path /workspace/source"}

Showing logs for build [32mhgautam-my-golang-pr-9-pr-build-c2ksd-1[0m stage [32mfrom-build-pack[0m and container [32mstep-git-merge[0m
Using SHAs from PULL_REFS=master:cded97faa841dfc21c4b74a9f99597c8239768f4,9:932b8f033d917e1bebba4787414ff1011b6fdb60
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git fetch origin --unshallow 932b8f033d917e1bebba4787414ff1011b6fdb60: cded97faa841dfc21c4b74a9f99597c8239768f4:
DEBUG: ran git fetch --unshallow origin 932b8f033d917e1bebba4787414ff1011b6fdb60: cded97faa841dfc21c4b74a9f99597c8239768f4: in 
DEBUG: JX_LOG_LEVEL=error LC_ALL=C git branch
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git checkout master
DEBUG: ran git checkout master in 
DEBUG: JX_LOG_LEVEL=error LC_ALL=C git reset --hard cded97faa841dfc21c4b74a9f99597c8239768f4
DEBUG: ran git reset --hard cded97faa841dfc21c4b74a9f99597c8239768f4 in 
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git clean -fd .
DEBUG: ran clean --force -d . in 
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git merge 932b8f033d917e1bebba4787414ff1011b6fdb60
DEBUG: ran git merge 932b8f033d917e1bebba4787414ff1011b6fdb60 in 
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git log --format=%H%x1f%an%x1f%ae%x1f%cn%x1f%ce%x1f%s%n%b%x1e cded97faa841dfc21c4b74a9f99597c8239768f4..HEAD
Merged SHA 932b8f033d917e1bebba4787414ff1011b6fdb60 with commit message 'fixed an error' into base branch master
Merged SHA 71d51ec80dcadbbff8898f9f59feb7c9e71ae73a with commit message 'beautify homepage' into base branch master

Showing logs for build [32mhgautam-my-golang-pr-9-pr-build-c2ksd-1[0m stage [32mfrom-build-pack[0m and container [32mstep-build-make-linux[0m
CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO15VENDOREXPERIMENT=1 go build -ldflags '' -o bin/my-golang main.go

Showing logs for build [32mhgautam-my-golang-pr-9-pr-build-c2ksd-1[0m stage [32mfrom-build-pack[0m and container [32mstep-build-container-build[0m
E0617 19:49:55.924008      10 aws_credentials.go:77] while getting AWS credentials NoCredentialProviders: no valid providers in chain. Deprecated.
	For verbose messaging see aws.Config.CredentialsChainVerboseErrors
[36mINFO[0m[0000] Resolved base name golang:alpine to build-env 
[36mINFO[0m[0000] Using dockerignore file: /workspace/source/.dockerignore 
[36mINFO[0m[0000] Retrieving image manifest golang:alpine      
E0617 19:49:56.212093      10 metadata.go:154] while reading 'google-dockercfg' metadata: http status code: 404 while fetching url http://metadata.google.internal./computeMetadata/v1/instance/attributes/google-dockercfg
E0617 19:49:56.214692      10 metadata.go:166] while reading 'google-dockercfg-url' metadata: http status code: 404 while fetching url http://metadata.google.internal./computeMetadata/v1/instance/attributes/google-dockercfg-url
[36mINFO[0m[0002] Retrieving image manifest golang:alpine      
[36mINFO[0m[0002] Retrieving image manifest alpine             
[36mINFO[0m[0003] Retrieving image manifest alpine             
[36mINFO[0m[0004] Built cross stage deps: map[0:[/go/src/my-golang/my-golang /go/src/my-golang/assets]] 
[36mINFO[0m[0004] Retrieving image manifest golang:alpine      
[36mINFO[0m[0005] Retrieving image manifest golang:alpine      
[36mINFO[0m[0006] Executing 0 build triggers                   
[36mINFO[0m[0006] Checking for cached layer gcr.io/integrated-oath-278216/cache:b7257e1106a6bc3dc83488efd6a5eb97b10d084f8d934822ea439f1fb71cd6d8... 
[36mINFO[0m[0006] No cached layer found for cmd COPY . /go/src/my-golang 
[36mINFO[0m[0006] Unpacking rootfs as cmd COPY . /go/src/my-golang requires it. 
[36mINFO[0m[0015] WORKDIR /go/src                              
[36mINFO[0m[0015] cmd: workdir                                 
[36mINFO[0m[0015] Changed working directory to /go/src         
[36mINFO[0m[0015] No files changed in this command, skipping snapshotting. 
[36mINFO[0m[0015] COPY . /go/src/my-golang                     
[36mINFO[0m[0015] Resolving 225 paths                          
[36mINFO[0m[0015] Taking snapshot of files...                  
[36mINFO[0m[0016] Pushing layer gcr.io/integrated-oath-278216/cache:b7257e1106a6bc3dc83488efd6a5eb97b10d084f8d934822ea439f1fb71cd6d8 to cache now 
[36mINFO[0m[0016] RUN cd /go/src/my-golang && go build .       
[36mINFO[0m[0016] Taking snapshot of full filesystem...        
[36mINFO[0m[0019] Resolving 11809 paths                        
[36mINFO[0m[0021] cmd: /bin/sh                                 
[36mINFO[0m[0021] args: [-c cd /go/src/my-golang && go build .] 
[36mINFO[0m[0021] Running: [/bin/sh -c cd /go/src/my-golang && go build .] 
[36mINFO[0m[0022] Taking snapshot of full filesystem...        
[36mINFO[0m[0022] Resolving 11809 paths                        
[36mINFO[0m[0024] Pushing layer gcr.io/integrated-oath-278216/cache:e7304588416b215b7368aa5dbf55dc74ae4fc19edbfd1a91cee52cdec9f46688 to cache now 
[36mINFO[0m[0027] Saving file go/src/my-golang/my-golang for later use 
[36mINFO[0m[0027] Saving file go/src/my-golang/assets for later use 
[36mINFO[0m[0027] Deleting filesystem...                       
[36mINFO[0m[0027] Retrieving image manifest alpine             
[36mINFO[0m[0028] Retrieving image manifest alpine             
[36mINFO[0m[0029] Executing 0 build triggers                   
[36mINFO[0m[0029] Checking for cached layer gcr.io/integrated-oath-278216/cache:a28f2a71a4a159437106de4999a1efa4d283c1f79f03d1a24db16b55d78f2849... 
[36mINFO[0m[0029] Using caching version of cmd: RUN apk update && apk add ca-certificates && rm -rf /var/cache/apk* 
[36mINFO[0m[0029] Checking for cached layer gcr.io/integrated-oath-278216/cache:835968f769aa4a6a6b9c9a01da4de40367c67400975cd0d6e2d902f9cf4172f6... 
[36mINFO[0m[0029] No cached layer found for cmd COPY --from=build-env /go/src/my-golang/my-golang /app 
[36mINFO[0m[0029] cmd: EXPOSE                                  
[36mINFO[0m[0029] Adding exposed port: 8080/tcp                
[36mINFO[0m[0029] Unpacking rootfs as cmd COPY --from=build-env /go/src/my-golang/my-golang /app requires it. 
[36mINFO[0m[0030] RUN apk update && apk add ca-certificates && rm -rf /var/cache/apk* 
[36mINFO[0m[0030] Found cached layer, extracting to filesystem 
[36mINFO[0m[0030] WORKDIR /app                                 
[36mINFO[0m[0030] cmd: workdir                                 
[36mINFO[0m[0030] Changed working directory to /app            
[36mINFO[0m[0030] Creating directory /app                      
[36mINFO[0m[0030] Resolving 1 paths                            
[36mINFO[0m[0030] Taking snapshot of files...                  
[36mINFO[0m[0030] COPY --from=build-env /go/src/my-golang/my-golang /app 
[36mINFO[0m[0030] Resolving 1 paths                            
[36mINFO[0m[0030] Taking snapshot of files...                  
[36mINFO[0m[0030] Pushing layer gcr.io/integrated-oath-278216/cache:835968f769aa4a6a6b9c9a01da4de40367c67400975cd0d6e2d902f9cf4172f6 to cache now 
[36mINFO[0m[0030] COPY --from=build-env /go/src/my-golang/assets /app/assets 
[36mINFO[0m[0030] Resolving 2 paths                            
[36mINFO[0m[0030] Taking snapshot of files...                  
[36mINFO[0m[0030] Pushing layer gcr.io/integrated-oath-278216/cache:2d257c1b904fcdf8cced48ecc57e2c6dde9f9dd6e878bd32cc76bff361ff43a9 to cache now 
[36mINFO[0m[0030] EXPOSE 8080                                  
[36mINFO[0m[0030] cmd: EXPOSE                                  
[36mINFO[0m[0030] Adding exposed port: 8080/tcp                
[36mINFO[0m[0030] No files changed in this command, skipping snapshotting. 
[36mINFO[0m[0030] ENTRYPOINT [ "./my-golang" ]                 
[36mINFO[0m[0030] No files changed in this command, skipping snapshotting. 

Showing logs for build [32mhgautam-my-golang-pr-9-pr-build-c2ksd-1[0m stage [32mfrom-build-pack[0m and container [32mstep-postbuild-post-build[0m
no CVE provider running in the current ** namespace so skip adding image to be analysed

Showing logs for build [32mhgautam-my-golang-pr-9-pr-build-c2ksd-1[0m stage [32mfrom-build-pack[0m and container [32mstep-promote-make-preview[0m
sed -i -e "s/version:.*/version: 0.0.0-SNAPSHOT-PR-9-1/" Chart.yaml
sed -i -e "s/version:.*/version: 0.0.0-SNAPSHOT-PR-9-1/" ../*/Chart.yaml
sed -i -e "s|repository:.*|repository: gcr.io\/integrated-oath-278216\/my-golang|" values.yaml
sed -i -e "s/tag:.*/tag: 0.0.0-SNAPSHOT-PR-9-1/" values.yaml
echo "  version: 0.0.0-SNAPSHOT-PR-9-1" >> requirements.yaml
** step helm build
WARNING: No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: storage.googleapis.com https://storage.googleapis.com/chartmuseum.jenkins-x.io
Successfully added Helm repository storage.googleapis.com.
Adding missing Helm repo: jenkins-x-chartmuseum http://jenkins-x-chartmuseum:8080
Successfully added Helm repository jenkins-x-chartmuseum.
WARNING: No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: chartmuseum.jenkins-x.io http://chartmuseum.jenkins-x.io
Successfully added Helm repository chartmuseum.jenkins-x.io.

Showing logs for build [32mhgautam-my-golang-pr-9-pr-build-c2ksd-1[0m stage [32mfrom-build-pack[0m and container [32mstep-promote-jx-preview[0m
Creating a preview
Found commit author match for: ******* with email address: himanshu@aplimasolutions.com
Created environment *******-my-golang-pr-9
Namespace **-*******-my-golang-pr-9 created 
expose:
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  config:
    domain: 34.82.184.243.nip.io
    exposer: Ingress
    http: "true"
preview:
  image:
    repository: gcr.io/integrated-oath-278216/my-golang
    tag: 0.0.0-SNAPSHOT-PR-9-1

Updating PipelineActivities *******-my-golang-pr-9-1 which has status Running
WARNING: preview application http://my-golang.**-*******-my-golang-pr-9.34.82.184.243.nip.io not available, error was 503 503 Service Temporarily Unavailable, delaying for: 1.023820306s
Preview application is now available at: http://my-golang.**-*******-my-golang-pr-9.34.82.184.243.nip.io
