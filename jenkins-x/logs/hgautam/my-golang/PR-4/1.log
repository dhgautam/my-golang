
Showing logs for build [32mhgautam-my-golang-pr-4-pr-build-fhqgh-1[0m stage [32mfrom-build-pack[0m and container [32mstep-credential-initializer-x474l[0m
{"level":"info","ts":1592269858.8850803,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/refs/heads/0.8.0-ns-support: no such file or directory"}
{"level":"info","ts":1592269858.8861704,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}

Showing logs for build [32mhgautam-my-golang-pr-4-pr-build-fhqgh-1[0m stage [32mfrom-build-pack[0m and container [32mstep-working-dir-initializer-fzbxv[0m
{"level":"info","ts":1592269859.8209684,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/HEAD: no such file or directory"}
{"level":"info","ts":1592269859.822651,"logger":"fallback-logger","caller":"bash/main.go:64","msg":"Successfully executed command \"sh -c mkdir -p /workspace/source\"; output "}

Showing logs for build [32mhgautam-my-golang-pr-4-pr-build-fhqgh-1[0m stage [32mfrom-build-pack[0m and container [32mstep-place-tools[0m

Showing logs for build [32mhgautam-my-golang-pr-4-pr-build-fhqgh-1[0m stage [32mfrom-build-pack[0m and container [32mstep-git-source-hgautam-my-golang-pr-4-pr-build-fhqgh-4p2vz[0m
{"level":"info","ts":1592269866.1677732,"logger":"fallback-logger","caller":"logging/config.go:69","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/refs/heads/0.8.0-ns-support: no such file or directory"}
{"level":"info","ts":1592269866.8219008,"logger":"fallback-logger","caller":"git/git.go:103","msg":"Successfully cloned https://github.com/*******/my-golang.git @ master in path /workspace/source"}

Showing logs for build [32mhgautam-my-golang-pr-4-pr-build-fhqgh-1[0m stage [32mfrom-build-pack[0m and container [32mstep-git-merge[0m
Using SHAs from PULL_REFS=master:912ac50508b60e8ee75307d6c706f4d3ac095415,4:e783dbb80f4a6e77c7e1b09426bb022a98741d92
DEBUG: JX_LOG_LEVEL=error LC_ALL=C git fetch origin --unshallow e783dbb80f4a6e77c7e1b09426bb022a98741d92: 912ac50508b60e8ee75307d6c706f4d3ac095415:
DEBUG: ran git fetch --unshallow origin e783dbb80f4a6e77c7e1b09426bb022a98741d92: 912ac50508b60e8ee75307d6c706f4d3ac095415: in 
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git branch
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git checkout master
DEBUG: ran git checkout master in 
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git reset --hard 912ac50508b60e8ee75307d6c706f4d3ac095415
DEBUG: ran git reset --hard 912ac50508b60e8ee75307d6c706f4d3ac095415 in 
DEBUG: LC_ALL=C JX_LOG_LEVEL=error git clean -fd .
DEBUG: ran clean --force -d . in 
DEBUG: JX_LOG_LEVEL=error LC_ALL=C git merge e783dbb80f4a6e77c7e1b09426bb022a98741d92
DEBUG: ran git merge e783dbb80f4a6e77c7e1b09426bb022a98741d92 in 
DEBUG: JX_LOG_LEVEL=error LC_ALL=C git log --format=%H%x1f%an%x1f%ae%x1f%cn%x1f%ce%x1f%s%n%b%x1e 912ac50508b60e8ee75307d6c706f4d3ac095415..HEAD
Merged SHA e783dbb80f4a6e77c7e1b09426bb022a98741d92 with commit message 'fixed a typo' into base branch master
Merged SHA ea8823a65b3c0db0471918c1fab416f7fe3fed12 with commit message 'fixed issue #2' into base branch master

Showing logs for build [32mhgautam-my-golang-pr-4-pr-build-fhqgh-1[0m stage [32mfrom-build-pack[0m and container [32mstep-build-make-linux[0m
CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO15VENDOREXPERIMENT=1 go build -ldflags '' -o bin/my-golang main.go

Showing logs for build [32mhgautam-my-golang-pr-4-pr-build-fhqgh-1[0m stage [32mfrom-build-pack[0m and container [32mstep-build-container-build[0m
E0616 01:11:19.674809      10 aws_credentials.go:77] while getting AWS credentials NoCredentialProviders: no valid providers in chain. Deprecated.
	For verbose messaging see aws.Config.CredentialsChainVerboseErrors
[36mINFO[0m[0001] Using dockerignore file: /workspace/source/.dockerignore 
[36mINFO[0m[0001] No base image, nothing to extract            
[36mINFO[0m[0001] Built cross stage deps: map[]                
[36mINFO[0m[0001] No base image, nothing to extract            
[36mINFO[0m[0001] Executing 0 build triggers                   
[36mINFO[0m[0001] cmd: EXPOSE                                  
[36mINFO[0m[0001] Adding exposed port: 8080/tcp                
[36mINFO[0m[0001] Checking for cached layer gcr.io/integrated-oath-278216/cache:13e1f579ff74a7a3f0a4249bea060f97191f3bd345b4b79ecf2a40293a68ad5a... 
[36mINFO[0m[0001] Using caching version of cmd: COPY ./bin/ /  
[36mINFO[0m[0001] Skipping unpacking as no commands require it. 
[36mINFO[0m[0001] EXPOSE 8080                                  
[36mINFO[0m[0001] cmd: EXPOSE                                  
[36mINFO[0m[0001] Adding exposed port: 8080/tcp                
[36mINFO[0m[0001] No files changed in this command, skipping snapshotting. 
[36mINFO[0m[0001] ENTRYPOINT ["/my-golang"]                    
[36mINFO[0m[0001] No files changed in this command, skipping snapshotting. 
[36mINFO[0m[0001] COPY ./bin/ /                                
[36mINFO[0m[0001] Found cached layer, extracting to filesystem 

Showing logs for build [32mhgautam-my-golang-pr-4-pr-build-fhqgh-1[0m stage [32mfrom-build-pack[0m and container [32mstep-postbuild-post-build[0m
no CVE provider running in the current ** namespace so skip adding image to be analysed

Showing logs for build [32mhgautam-my-golang-pr-4-pr-build-fhqgh-1[0m stage [32mfrom-build-pack[0m and container [32mstep-promote-make-preview[0m
sed -i -e "s/version:.*/version: 0.0.0-SNAPSHOT-PR-4-1/" Chart.yaml
sed -i -e "s/version:.*/version: 0.0.0-SNAPSHOT-PR-4-1/" ../*/Chart.yaml
sed -i -e "s|repository:.*|repository: gcr.io\/integrated-oath-278216\/my-golang|" values.yaml
sed -i -e "s/tag:.*/tag: 0.0.0-SNAPSHOT-PR-4-1/" values.yaml
echo "  version: 0.0.0-SNAPSHOT-PR-4-1" >> requirements.yaml
** step helm build
WARNING: No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: storage.googleapis.com https://storage.googleapis.com/chartmuseum.jenkins-x.io
Successfully added Helm repository storage.googleapis.com.
Adding missing Helm repo: jenkins-x-chartmuseum http://jenkins-x-chartmuseum:8080
Successfully added Helm repository jenkins-x-chartmuseum.
WARNING: No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: chartmuseum.jenkins-x.io http://chartmuseum.jenkins-x.io
Successfully added Helm repository chartmuseum.jenkins-x.io.

Showing logs for build [32mhgautam-my-golang-pr-4-pr-build-fhqgh-1[0m stage [32mfrom-build-pack[0m and container [32mstep-promote-jx-preview[0m
Creating a preview
Found commit author match for: ******* with email address: himanshu@aplimasolutions.com
Created environment *******-my-golang-pr-4
Namespace **-*******-my-golang-pr-4 created 
expose:
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  config:
    domain: 34.82.95.155.nip.io
    exposer: Ingress
    http: "true"
preview:
  image:
    repository: gcr.io/integrated-oath-278216/my-golang
    tag: 0.0.0-SNAPSHOT-PR-4-1

Updating PipelineActivities *******-my-golang-pr-4-1 which has status Running
Preview application is now available at: http://my-golang.**-*******-my-golang-pr-4.34.82.95.155.nip.io
